State 44 conflicts: 2 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: funcdef ';' program
    2        | %empty

    3 funcdef: ID '(' mbpars ')' stmts END

    4 mbpars: ID ',' mbpars
    5       | %empty

    6 stmts: stmt ';' stmts
    7      | mbstmt

    8 mbstmt: stmt ';'
    9       | %empty

   10 stmt: RETURN expr
   11     | IF expr THEN stmts mbelse END
   12     | ID ':' LOOP stmts END
   13     | BREAK ID
   14     | CONT ID
   15     | VAR ID ASSIGN expr
   16     | lexpr ASSIGN expr
   17     | expr

   18 mbelse: ELSE stmts
   19       | %empty

   20 lexpr: ID
   21      | '*' term

   22 expr: NOT term
   23     | '-' term
   24     | '*' term
   25     | term '+' term
   26     | term '*' term
   27     | term AND term
   28     | term LEQ term
   29     | term '#' term

   30 term: '(' expr ')'
   31     | NUM
   32     | ID
   33     | ID '(' mbexprs ')'

   34 mbexprs: expr ',' mbexprs
   35        | expr
   36        | %empty


Terminals, with rules where they appear

    $end (0) 0
    '#' (35) 29
    '(' (40) 3 30 33
    ')' (41) 3 30 33
    '*' (42) 21 24 26
    '+' (43) 25
    ',' (44) 4 34
    '-' (45) 23
    ':' (58) 12
    ';' (59) 1 6 8
    error (256)
    END (258) 3 11 12
    RETURN (259) 10
    IF (260) 11
    THEN (261) 11
    ELSE (262) 18
    LOOP (263) 12
    BREAK (264) 13
    CONT (265) 14
    VAR (266) 15
    NOT (267) 22
    AND (268) 27
    ASSIGN (269) 15 16
    LEQ (270) 28
    NUM (271) 31
    ID (272) 3 4 12 13 14 15 20 32 33


Nonterminals, with rules where they appear

    $accept (27)
        on left: 0
    program (28)
        on left: 1 2
        on right: 0 1
    funcdef (29)
        on left: 3
        on right: 1
    mbpars (30)
        on left: 4 5
        on right: 3 4
    stmts (31)
        on left: 6 7
        on right: 3 6 11 12 18
    mbstmt (32)
        on left: 8 9
        on right: 7
    stmt (33)
        on left: 10 11 12 13 14 15 16 17
        on right: 6 8
    mbelse (34)
        on left: 18 19
        on right: 11
    lexpr (35)
        on left: 20 21
        on right: 16
    expr (36)
        on left: 22 23 24 25 26 27 28 29
        on right: 10 11 15 16 17 30 34 35
    term (37)
        on left: 30 31 32 33
        on right: 21 22 23 24 25 26 27 28 29
    mbexprs (38)
        on left: 34 35 36
        on right: 33 34


State 0

    0 $accept: . program $end

    ID  shift, and go to state 1

    $default  reduce using rule 2 (program)

    program  go to state 2
    funcdef  go to state 3


State 1

    3 funcdef: ID . '(' mbpars ')' stmts END

    '('  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: funcdef . ';' program

    ';'  shift, and go to state 6


State 4

    3 funcdef: ID '(' . mbpars ')' stmts END

    ID  shift, and go to state 7

    $default  reduce using rule 5 (mbpars)

    mbpars  go to state 8


State 5

    0 $accept: program $end .

    $default  accept


State 6

    1 program: funcdef ';' . program

    ID  shift, and go to state 1

    $default  reduce using rule 2 (program)

    program  go to state 9
    funcdef  go to state 3


State 7

    4 mbpars: ID . ',' mbpars

    ','  shift, and go to state 10


State 8

    3 funcdef: ID '(' mbpars . ')' stmts END

    ')'  shift, and go to state 11


State 9

    1 program: funcdef ';' program .

    $default  reduce using rule 1 (program)


State 10

    4 mbpars: ID ',' . mbpars

    ID  shift, and go to state 7

    $default  reduce using rule 5 (mbpars)

    mbpars  go to state 12


State 11

    3 funcdef: ID '(' mbpars ')' . stmts END

    RETURN  shift, and go to state 13
    IF      shift, and go to state 14
    BREAK   shift, and go to state 15
    CONT    shift, and go to state 16
    VAR     shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '*'     shift, and go to state 20
    '-'     shift, and go to state 21
    NUM     shift, and go to state 22
    ID      shift, and go to state 23

    $default  reduce using rule 9 (mbstmt)

    stmts   go to state 24
    mbstmt  go to state 25
    stmt    go to state 26
    lexpr   go to state 27
    expr    go to state 28
    term    go to state 29


State 12

    4 mbpars: ID ',' mbpars .

    $default  reduce using rule 4 (mbpars)


State 13

   10 stmt: RETURN . expr

    NOT  shift, and go to state 18
    '('  shift, and go to state 19
    '*'  shift, and go to state 30
    '-'  shift, and go to state 21
    NUM  shift, and go to state 22
    ID   shift, and go to state 31

    expr  go to state 32
    term  go to state 29


State 14

   11 stmt: IF . expr THEN stmts mbelse END

    NOT  shift, and go to state 18
    '('  shift, and go to state 19
    '*'  shift, and go to state 30
    '-'  shift, and go to state 21
    NUM  shift, and go to state 22
    ID   shift, and go to state 31

    expr  go to state 33
    term  go to state 29


State 15

   13 stmt: BREAK . ID

    ID  shift, and go to state 34


State 16

   14 stmt: CONT . ID

    ID  shift, and go to state 35


State 17

   15 stmt: VAR . ID ASSIGN expr

    ID  shift, and go to state 36


State 18

   22 expr: NOT . term

    '('  shift, and go to state 19
    NUM  shift, and go to state 22
    ID   shift, and go to state 31

    term  go to state 37


State 19

   30 term: '(' . expr ')'

    NOT  shift, and go to state 18
    '('  shift, and go to state 19
    '*'  shift, and go to state 30
    '-'  shift, and go to state 21
    NUM  shift, and go to state 22
    ID   shift, and go to state 31

    expr  go to state 38
    term  go to state 29


State 20

   21 lexpr: '*' . term
   24 expr: '*' . term

    '('  shift, and go to state 19
    NUM  shift, and go to state 22
    ID   shift, and go to state 31

    term  go to state 39


State 21

   23 expr: '-' . term

    '('  shift, and go to state 19
    NUM  shift, and go to state 22
    ID   shift, and go to state 31

    term  go to state 40


State 22

   31 term: NUM .

    $default  reduce using rule 31 (term)


State 23

   12 stmt: ID . ':' LOOP stmts END
   20 lexpr: ID .
   32 term: ID .
   33     | ID . '(' mbexprs ')'

    '('  shift, and go to state 41
    ':'  shift, and go to state 42

    ASSIGN    reduce using rule 20 (lexpr)
    $default  reduce using rule 32 (term)


State 24

    3 funcdef: ID '(' mbpars ')' stmts . END

    END  shift, and go to state 43


State 25

    7 stmts: mbstmt .

    $default  reduce using rule 7 (stmts)


State 26

    6 stmts: stmt . ';' stmts
    8 mbstmt: stmt . ';'

    ';'  shift, and go to state 44


State 27

   16 stmt: lexpr . ASSIGN expr

    ASSIGN  shift, and go to state 45


State 28

   17 stmt: expr .

    $default  reduce using rule 17 (stmt)


State 29

   25 expr: term . '+' term
   26     | term . '*' term
   27     | term . AND term
   28     | term . LEQ term
   29     | term . '#' term

    AND  shift, and go to state 46
    '*'  shift, and go to state 47
    '+'  shift, and go to state 48
    LEQ  shift, and go to state 49
    '#'  shift, and go to state 50


State 30

   24 expr: '*' . term

    '('  shift, and go to state 19
    NUM  shift, and go to state 22
    ID   shift, and go to state 31

    term  go to state 51


State 31

   32 term: ID .
   33     | ID . '(' mbexprs ')'

    '('  shift, and go to state 41

    $default  reduce using rule 32 (term)


State 32

   10 stmt: RETURN expr .

    $default  reduce using rule 10 (stmt)


State 33

   11 stmt: IF expr . THEN stmts mbelse END

    THEN  shift, and go to state 52


State 34

   13 stmt: BREAK ID .

    $default  reduce using rule 13 (stmt)


State 35

   14 stmt: CONT ID .

    $default  reduce using rule 14 (stmt)


State 36

   15 stmt: VAR ID . ASSIGN expr

    ASSIGN  shift, and go to state 53


State 37

   22 expr: NOT term .

    $default  reduce using rule 22 (expr)


State 38

   30 term: '(' expr . ')'

    ')'  shift, and go to state 54


State 39

   21 lexpr: '*' term .
   24 expr: '*' term .

    ';'       reduce using rule 24 (expr)
    $default  reduce using rule 21 (lexpr)


State 40

   23 expr: '-' term .

    $default  reduce using rule 23 (expr)


State 41

   33 term: ID '(' . mbexprs ')'

    NOT  shift, and go to state 18
    '('  shift, and go to state 19
    '*'  shift, and go to state 30
    '-'  shift, and go to state 21
    NUM  shift, and go to state 22
    ID   shift, and go to state 31

    $default  reduce using rule 36 (mbexprs)

    expr     go to state 55
    term     go to state 29
    mbexprs  go to state 56


State 42

   12 stmt: ID ':' . LOOP stmts END

    LOOP  shift, and go to state 57


State 43

    3 funcdef: ID '(' mbpars ')' stmts END .

    $default  reduce using rule 3 (funcdef)


State 44

    6 stmts: stmt ';' . stmts
    8 mbstmt: stmt ';' .

    RETURN  shift, and go to state 13
    IF      shift, and go to state 14
    BREAK   shift, and go to state 15
    CONT    shift, and go to state 16
    VAR     shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '*'     shift, and go to state 20
    '-'     shift, and go to state 21
    NUM     shift, and go to state 22
    ID      shift, and go to state 23

    END       reduce using rule 8 (mbstmt)
    END       [reduce using rule 9 (mbstmt)]
    ELSE      reduce using rule 8 (mbstmt)
    ELSE      [reduce using rule 9 (mbstmt)]
    $default  reduce using rule 8 (mbstmt)

    stmts   go to state 58
    mbstmt  go to state 25
    stmt    go to state 26
    lexpr   go to state 27
    expr    go to state 28
    term    go to state 29


State 45

   16 stmt: lexpr ASSIGN . expr

    NOT  shift, and go to state 18
    '('  shift, and go to state 19
    '*'  shift, and go to state 30
    '-'  shift, and go to state 21
    NUM  shift, and go to state 22
    ID   shift, and go to state 31

    expr  go to state 59
    term  go to state 29


State 46

   27 expr: term AND . term

    '('  shift, and go to state 19
    NUM  shift, and go to state 22
    ID   shift, and go to state 31

    term  go to state 60


State 47

   26 expr: term '*' . term

    '('  shift, and go to state 19
    NUM  shift, and go to state 22
    ID   shift, and go to state 31

    term  go to state 61


State 48

   25 expr: term '+' . term

    '('  shift, and go to state 19
    NUM  shift, and go to state 22
    ID   shift, and go to state 31

    term  go to state 62


State 49

   28 expr: term LEQ . term

    '('  shift, and go to state 19
    NUM  shift, and go to state 22
    ID   shift, and go to state 31

    term  go to state 63


State 50

   29 expr: term '#' . term

    '('  shift, and go to state 19
    NUM  shift, and go to state 22
    ID   shift, and go to state 31

    term  go to state 64


State 51

   24 expr: '*' term .

    $default  reduce using rule 24 (expr)


State 52

   11 stmt: IF expr THEN . stmts mbelse END

    RETURN  shift, and go to state 13
    IF      shift, and go to state 14
    BREAK   shift, and go to state 15
    CONT    shift, and go to state 16
    VAR     shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '*'     shift, and go to state 20
    '-'     shift, and go to state 21
    NUM     shift, and go to state 22
    ID      shift, and go to state 23

    $default  reduce using rule 9 (mbstmt)

    stmts   go to state 65
    mbstmt  go to state 25
    stmt    go to state 26
    lexpr   go to state 27
    expr    go to state 28
    term    go to state 29


State 53

   15 stmt: VAR ID ASSIGN . expr

    NOT  shift, and go to state 18
    '('  shift, and go to state 19
    '*'  shift, and go to state 30
    '-'  shift, and go to state 21
    NUM  shift, and go to state 22
    ID   shift, and go to state 31

    expr  go to state 66
    term  go to state 29


State 54

   30 term: '(' expr ')' .

    $default  reduce using rule 30 (term)


State 55

   34 mbexprs: expr . ',' mbexprs
   35        | expr .

    ','  shift, and go to state 67

    $default  reduce using rule 35 (mbexprs)


State 56

   33 term: ID '(' mbexprs . ')'

    ')'  shift, and go to state 68


State 57

   12 stmt: ID ':' LOOP . stmts END

    RETURN  shift, and go to state 13
    IF      shift, and go to state 14
    BREAK   shift, and go to state 15
    CONT    shift, and go to state 16
    VAR     shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '*'     shift, and go to state 20
    '-'     shift, and go to state 21
    NUM     shift, and go to state 22
    ID      shift, and go to state 23

    $default  reduce using rule 9 (mbstmt)

    stmts   go to state 69
    mbstmt  go to state 25
    stmt    go to state 26
    lexpr   go to state 27
    expr    go to state 28
    term    go to state 29


State 58

    6 stmts: stmt ';' stmts .

    $default  reduce using rule 6 (stmts)


State 59

   16 stmt: lexpr ASSIGN expr .

    $default  reduce using rule 16 (stmt)


State 60

   27 expr: term AND term .

    $default  reduce using rule 27 (expr)


State 61

   26 expr: term '*' term .

    $default  reduce using rule 26 (expr)


State 62

   25 expr: term '+' term .

    $default  reduce using rule 25 (expr)


State 63

   28 expr: term LEQ term .

    $default  reduce using rule 28 (expr)


State 64

   29 expr: term '#' term .

    $default  reduce using rule 29 (expr)


State 65

   11 stmt: IF expr THEN stmts . mbelse END

    ELSE  shift, and go to state 70

    $default  reduce using rule 19 (mbelse)

    mbelse  go to state 71


State 66

   15 stmt: VAR ID ASSIGN expr .

    $default  reduce using rule 15 (stmt)


State 67

   34 mbexprs: expr ',' . mbexprs

    NOT  shift, and go to state 18
    '('  shift, and go to state 19
    '*'  shift, and go to state 30
    '-'  shift, and go to state 21
    NUM  shift, and go to state 22
    ID   shift, and go to state 31

    $default  reduce using rule 36 (mbexprs)

    expr     go to state 55
    term     go to state 29
    mbexprs  go to state 72


State 68

   33 term: ID '(' mbexprs ')' .

    $default  reduce using rule 33 (term)


State 69

   12 stmt: ID ':' LOOP stmts . END

    END  shift, and go to state 73


State 70

   18 mbelse: ELSE . stmts

    RETURN  shift, and go to state 13
    IF      shift, and go to state 14
    BREAK   shift, and go to state 15
    CONT    shift, and go to state 16
    VAR     shift, and go to state 17
    NOT     shift, and go to state 18
    '('     shift, and go to state 19
    '*'     shift, and go to state 20
    '-'     shift, and go to state 21
    NUM     shift, and go to state 22
    ID      shift, and go to state 23

    $default  reduce using rule 9 (mbstmt)

    stmts   go to state 74
    mbstmt  go to state 25
    stmt    go to state 26
    lexpr   go to state 27
    expr    go to state 28
    term    go to state 29


State 71

   11 stmt: IF expr THEN stmts mbelse . END

    END  shift, and go to state 75


State 72

   34 mbexprs: expr ',' mbexprs .

    $default  reduce using rule 34 (mbexprs)


State 73

   12 stmt: ID ':' LOOP stmts END .

    $default  reduce using rule 12 (stmt)


State 74

   18 mbelse: ELSE stmts .

    $default  reduce using rule 18 (mbelse)


State 75

   11 stmt: IF expr THEN stmts mbelse END .

    $default  reduce using rule 11 (stmt)
